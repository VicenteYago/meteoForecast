#library(httr)
#library(tidyverse)
#library(lubridate)

  key <- "eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJqb3NldmljZW50ZS55YWdvQHVtLmVzIiwianRpIjoiNTdhNDgwMzQtNDYxNy00OWZmLWFiMjgtZjZlMjBjZjliOGUwIiwiaXNzIjoiQUVNRVQiLCJpYXQiOjE1ODcwMjY5NzQsInVzZXJJZCI6IjU3YTQ4MDM0LTQ2MTctNDlmZi1hYjI4LWY2ZTIwY2Y5YjhlMCIsInJvbGUiOiIifQ.huWKTwOwU-XCMv4DwHJCzNs8zQn8L2cO834ltpiUymM"

aemetJSONtodf <- function(aemet.JSON, variable){
  df.glob <- data.frame()
  for (i in 1:length(aemet.JSON[[1]]$prediccion$dia)){
    aemet.JSON[[1]]$prediccion$dia[[i]]$fecha %>% as.POSIXct() -> d1

    if (variable == "viento"){

      (1:(aemet.JSON[[1]]$prediccion$dia[[i]]$vientoAndRachaMax %>% length()))[c(T,F)] -> idx.viento # los indices pares son rachaMax

      data.frame(
        hour =  d1 + hours(aemet.JSON[[1]]$prediccion$dia[[i]]$vientoAndRachaMax[idx.viento] %>% lapply("[[", "periodo") %>% unlist() %>% as.numeric()),
        value =            aemet.JSON[[1]]$prediccion$dia[[i]]$vientoAndRachaMax[idx.viento] %>% lapply("[[", "velocidad") %>% unlist() %>% as.numeric()
      ) -> df


    } else {
      data.frame(
        hour  = d1 + hours(aemet.JSON[prediccion[1]]$$dia[[i]][[variable]] %>% lapply("[[", "periodo") %>% unlist() %>% as.numeric()),
        value =            aemet.JSON[[1]]$prediccion$dia[[i]][[variable]] %>% lapply("[[", "value") %>% unlist() %>% as.numeric()
      ) -> df
    }


    df.glob <- rbind(df.glob,df)
  }
  return(df.glob)
}

#' import 
#' @export
getPrediccionAEMET<-function(codigo, KEY = key){

  # Returns link to json data
  DIR <- paste0("https://opendata.aemet.es/opendata/api/prediccion/especifica/municipio/horaria/", codigo)
  r<-httr::GET(DIR,
               add_headers(content_type = "application/json"),
               add_headers('api_key' = KEY))
  r$status_code
  httr::content <- httr::content(r)

  # Returns raw json data
  r <-httr::GET(content$datos,
                add_headers(content_type = "application/json"),
                add_headers('api_key' = KEY))
  r$status_code
  content <- httr::content(r)

  tmpfile <- tempfile(pattern = codigo, tmpdir = "./tmp", fileext = ".json") # puede fallar si no hay directorio tmp
  content %>% write(file = tmpfile)
  aemet <- RJSONIO::fromJSON(tmpfile)
  unlink(tmpfile)

  temp  <- aemetJSONtodf(aemet, "temperatura")
  HR    <- aemetJSONtodf(aemet, "humedadRelativa")
  prec  <- aemetJSONtodf(aemet, "precipitacion")
  viento<- aemetJSONtodf(aemet, "viento")

  df <- data.frame(date = temp[,1],
                   temp  = temp[,2],
                   HR    = HR[,2],
                   prec  = prec[,2],
                   viento = viento[,2]/3.6)

  return(df)
}

